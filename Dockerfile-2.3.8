# Docker image for PostgreSQL with the plv8 extensions installed
# Note: building plv8 from source takes a long time, and will timeout with Docker Hub's
# automated builds. See the main Dockerfile for an image that uses pre-built binaries
# (built using this Dockerfile.build)
# Provided by Ionx Solutions: https://www.ionxsolutions.com

# Begin by building plv8
FROM postgres:11.2 AS build

ENV PLV8_VERSION 2.3.8
ENV PLV8_SHASUM="b3ffb95daeb21b17bc5670f372403879dfad7eee86e0152e4da763ffd16fbf07 ${PLV8_VERSION}.tar.gz"

RUN buildDeps="curl build-essential ca-certificates git python gnupg libc++-dev libc++abi-dev pkg-config glib2.0 postgresql-server-dev-$PG_MAJOR" \
    && apt-get update \
    && apt-get install -y --no-install-recommends  libc++1 ${buildDeps} \
	&& echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
	&& curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
	&& apt-get update \
	&& apt-get install -y --no-install-recommends libc++1 postgresql-server-dev-$PG_MAJOR \
    && git config --global user.email "nobody@example.com" \
    && git config --global user.name "nobody" \
    && mkdir -p /tmp/build \
    && curl -o /tmp/build/${PLV8_VERSION}.tar.gz -SL "https://github.com/plv8/plv8/archive/v${PLV8_VERSION}.tar.gz" \
    && cd /tmp/build \
    && echo ${PLV8_SHASUM} | sha256sum -c \
    && tar -xzf /tmp/build/${PLV8_VERSION}.tar.gz -C /tmp/build/ \
    && cd /tmp/build/plv8-${PLV8_VERSION} \
    && sed -i '104i%.bc : %.cc\n\t$(COMPILE.cxx.bc) $(CCFLAGS) $(CPPFLAGS) -fPIC -c -o $@ $<\n' Makefile.shared \
    && make static \
    && make install \
    && cd / \
    && rm -rf /tmp/build \
    && apt-get remove -y --purge ${buildDeps} \
    && apt-get autoremove -y --purge \
    && rm -rf /var/lib/apt/lists/